<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\tabt_sync\Event\Truncate\TruncateDivisionsEvent;
use Drupal\tabt_sync\Event\Truncate\TruncateMembersEvent;
use Drupal\tabt_sync\Event\Truncate\TruncateTeamsEvent;
use Drupal\tabt_sync\Event\Truncate\TruncateTournamentsEvent;
use Drupal\tabt_sync\Event\Truncate\TruncateVenuesEvent;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function tabt_sync_form_tabt_settings_form_alter(array &$form): void {
  $form['truncate'] = [
    '#type' => 'checkbox',
    '#title' => t('Clear existing data'),
  ];

  $form['#submit'][] = function (array &$form, FormStateInterface $form_state): void {
    if (!$form_state->getValue('truncate')) {
      return;
    }

    /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $eventDispatcher */
    $eventDispatcher = Drupal::service('event_dispatcher');

    $eventDispatcher->dispatch(new TruncateDivisionsEvent());
    $eventDispatcher->dispatch(new TruncateMembersEvent());
    $eventDispatcher->dispatch(new TruncateTeamsEvent());
    $eventDispatcher->dispatch(new TruncateTournamentsEvent());
    $eventDispatcher->dispatch(new TruncateVenuesEvent());
  };
}

/**
 * Implements hook_views_data().
 */
function tabt_sync_views_data(): array {
  $data['views']['tabt_sync'] = [
    'title' => t('TabT sync'),
    'area' => ['id' => 'tabt_sync'],
  ];

  return $data;
}
